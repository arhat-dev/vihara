/*
Copyright 2020 The arhat.dev Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "arhat.dev/vihara/pkg/apis/vihara/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MaintenanceJobLister helps list MaintenanceJobs.
type MaintenanceJobLister interface {
	// List lists all MaintenanceJobs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.MaintenanceJob, err error)
	// MaintenanceJobs returns an object that can list and get MaintenanceJobs.
	MaintenanceJobs(namespace string) MaintenanceJobNamespaceLister
	MaintenanceJobListerExpansion
}

// maintenanceJobLister implements the MaintenanceJobLister interface.
type maintenanceJobLister struct {
	indexer cache.Indexer
}

// NewMaintenanceJobLister returns a new MaintenanceJobLister.
func NewMaintenanceJobLister(indexer cache.Indexer) MaintenanceJobLister {
	return &maintenanceJobLister{indexer: indexer}
}

// List lists all MaintenanceJobs in the indexer.
func (s *maintenanceJobLister) List(selector labels.Selector) (ret []*v1alpha1.MaintenanceJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MaintenanceJob))
	})
	return ret, err
}

// MaintenanceJobs returns an object that can list and get MaintenanceJobs.
func (s *maintenanceJobLister) MaintenanceJobs(namespace string) MaintenanceJobNamespaceLister {
	return maintenanceJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MaintenanceJobNamespaceLister helps list and get MaintenanceJobs.
type MaintenanceJobNamespaceLister interface {
	// List lists all MaintenanceJobs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.MaintenanceJob, err error)
	// Get retrieves the MaintenanceJob from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.MaintenanceJob, error)
	MaintenanceJobNamespaceListerExpansion
}

// maintenanceJobNamespaceLister implements the MaintenanceJobNamespaceLister
// interface.
type maintenanceJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MaintenanceJobs in the indexer for a given namespace.
func (s maintenanceJobNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MaintenanceJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MaintenanceJob))
	})
	return ret, err
}

// Get retrieves the MaintenanceJob from the indexer for a given namespace and name.
func (s maintenanceJobNamespaceLister) Get(name string) (*v1alpha1.MaintenanceJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("maintenancejob"), name)
	}
	return obj.(*v1alpha1.MaintenanceJob), nil
}
